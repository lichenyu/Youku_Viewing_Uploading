uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank = seq(1, length(uploading_vc_p_sorted))
uploading_vc_p_sorted[length(uploading_vc_p_sorted)]
plot(log10(rank_uploading), log10(uploading_vc_p_sorted))
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
plot(log10(rank_uploading), log10(uploading_vc_p_sorted))
min(playback_vc)
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
plot(log10(rank_playback), log10(playback_vc_sorted))
datapath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/data/'
workpath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/characterization/'
uploading_vc = read.table(paste(datapath, 'uploading/clean/view count clean/vc', sep = ''))$V31
playback_vc = read.table(paste(workpath, 'playback/video viewcount/vc', sep = ''))$V1
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
plot(x_uploading, y_uploading)
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
# pdf(paste(workpath, "plot/video popularity/vc.pdf", sep = ''),
#     width = 10, height = 4)
# par(mfrow = c(1, 2), cex = 1)
#
#
#
# cdf_uploading_lifetime = ecdf(uploading_lifetime)
# #d,l,u,r
# par(mar=c(5, 4, 1, 2))
# plot(cdf_uploading_lifetime, verticals = TRUE, do.points = FALSE, col.01line = NULL,
#      axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 30), ylim = c(0, 1),
#      main = '', sub = '(a)', xlab = 'Uploaded Video Lifetime (days)', ylab = 'CDF',
#      lwd = 2, col = 'blue')
# axis(side = 1, at = seq(0, 30, 5), labels = seq(0, 30, 5), las = 1, tck = 1, lty = 2, col = 'grey')
# axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
# box()
#
# cdf_playback_age = ecdf(playback_age)
# #d,l,u,r
# par(mar=c(5, 4, 1, 2))
# plot(cdf_playback_age, verticals = TRUE, do.points = FALSE, col.01line = NULL,
#      axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 1080), ylim = c(0, 1),
#      main = '', sub = '(b)', xlab = 'Viewed Video Age (months)', ylab = 'CDF',
#      lwd = 2, col = 'blue')
# axis(side = 1, at = seq(0, 1080, 180), labels = seq(0, 1080, 180)/30, las = 1, tck = 1, lty = 2, col = 'grey')
# axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
# box()
#
#
#
# dev.off()
#
#
fit = lm(y_uploading~x_uploading)
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
fit = lm(y_uploading[which(y_uploading < 4.5)]~x_uploading[which(x_uploading < 4.5)])
fit
fit = lm(y_uploading[which(x_uploading < 4.5)]~x_uploading[which(x_uploading < 4.5)])
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
plot(x_uploading, y_uploading)
fit = lm(y_uploading[which(x_uploading < 4.5)]~x_uploading[which(x_uploading < 4.5)])
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
plot(x_uploading, y_uploading)
fit = lm(y_uploading~x_uploading)
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
fit = lm(y_playback~x_playback)
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
plot(x_uploading, y_uploading, log = 'xy')
plot(rank_uploading, uploading_vc_p_sorted, log = 'xy')
min(y_uploading)
length(which(y_uploading == 0))
plot(x_uploading, y_uploading)
max(x_uploading)
plot(x_uploading, y_uploading, xlim = c(5.15, 5.16))
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
plot(x_uploading, y_uploading)
fit = lm(y_uploading~x_uploading)
fit
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
x_uploading = x_uploading[which(x_uploading < 4.5)]
y_uploading = y_uploading[which(x_uploading < 4.5)]
plot(x_uploading, y_uploading)
fit = lm(y_uploading~x_uploading)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
x_uploading_mod = x_uploading[which(x_uploading < 4.5)]
y_uploading_mod = y_uploading[which(x_uploading < 4.5)]
plot(x_uploading, y_uploading)
fit = lm(y_uploading_mod ~ x_uploading_mod)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4.5)]
y_playback_1 = y_playback[which(x_playback < 4.5)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_1 = x_playback[which(y_playback < 7)]
y_playback_1 = y_playback[which(y_playback < 7)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_1 = x_playback[which(y_playback > 7)]
y_playback_1 = y_playback[which(y_playback > 7)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -2.035e-13,
b = 6.307,
c = 5.893))
summary(f)
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.122e-11,
b = 5.156e+00,
c = 7.104e+00))
summary(f)
f
f$data
f$m
f$convInfo
f$m
f$m$getAllPars()
f$m$getAllPars()[1]
lines(x_playback_2, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x_playback_2) + f$m$getAllPars()[3],
lty = 2, lwd = 2, col = 'red')
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.122e-11,
b = 5.156e+00,
c = 7.104e+00))
summary(f)
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
summary(f)
lines(x_playback_2, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x_playback_2) + f$m$getAllPars()[3],
lty = 2, col = 'red')
x = seq(4, 5.1, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
lty = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.1, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.001, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.01, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.001, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
abline(fit$coefficients[1], fit$coefficients[2], lty = 2, lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.05, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lty = 2, lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
x = seq(0, 4, 0.01)
lines(x, fit$coefficients[1] + fit$coefficients[2] * x,
type = 'l', lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.05, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lwd = 2, col = 'red')
datapath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/data/'
workpath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/characterization/'
uploading_vc = read.table(paste(datapath, 'uploading/clean/view count clean/vc', sep = ''))$V31
playback_vc = read.table(paste(workpath, 'playback/video viewcount/vc', sep = ''))$V1
uploading_vc_p = uploading_vc[which(uploading_vc > 0)]
uploading_vc_p_sorted = sort(uploading_vc_p, decreasing = TRUE)
rank_uploading = seq(1, length(uploading_vc_p_sorted))
x_uploading = log10(rank_uploading)
y_uploading = log10(uploading_vc_p_sorted)
#d,l,u,r
par(mar=c(5, 4, 1, 2))
plot(x_uploading, y_uploading)
x_uploading_1 = x_uploading[which(x_uploading < 4.5)]
y_uploading_1 = y_uploading[which(x_uploading < 4.5)]
fit = lm(y_uploading_1 ~ x_uploading_1)
abline(fit$coefficients[1], fit$coefficients[2], lwd = 2, col = 'red')
playback_vc_sorted = sort(playback_vc, decreasing = TRUE)
rank_playback = seq(1, length(playback_vc_sorted))
x_playback = log10(rank_playback)
y_playback = log10(playback_vc_sorted)
#d,l,u,r
par(mar=c(5, 4, 1, 2))
plot(x_playback, y_playback)
x_playback_1 = x_playback[which(x_playback < 4)]
y_playback_1 = y_playback[which(x_playback < 4)]
fit = lm(y_playback_1 ~ x_playback_1)
x = seq(0, 4, 0.01)
lines(x, fit$coefficients[1] + fit$coefficients[2] * x,
type = 'l', lwd = 2, col = 'red')
x_playback_2 = x_playback[which(x_playback >= 4)]
y_playback_2 = y_playback[which(x_playback >= 4)]
temp = data.frame(x_playback_2, y_playback_2)
f = nls(y_playback_2 ~ a * exp(b * x_playback_2) + c, temp, list(a = -3.123e-11,
b = 5.156e+00,
c = 7.104e+00))
#summary(f)
x = seq(4, 5.05, 0.0001)
lines(x, f$m$getAllPars()[1] * exp( f$m$getAllPars()[2] * x) + f$m$getAllPars()[3],
type = 'l', lwd = 2, col = 'red')
# pdf(paste(workpath, "plot/video popularity/vc.pdf", sep = ''),
#     width = 10, height = 4)
# par(mfrow = c(1, 2), cex = 1)
#
#
#
# cdf_uploading_lifetime = ecdf(uploading_lifetime)
# #d,l,u,r
# par(mar=c(5, 4, 1, 2))
# plot(cdf_uploading_lifetime, verticals = TRUE, do.points = FALSE, col.01line = NULL,
#      axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 30), ylim = c(0, 1),
#      main = '', sub = '(a)', xlab = 'Uploaded Video Lifetime (days)', ylab = 'CDF',
#      lwd = 2, col = 'blue')
# axis(side = 1, at = seq(0, 30, 5), labels = seq(0, 30, 5), las = 1, tck = 1, lty = 2, col = 'grey')
# axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
# box()
#
# cdf_playback_age = ecdf(playback_age)
# #d,l,u,r
# par(mar=c(5, 4, 1, 2))
# plot(cdf_playback_age, verticals = TRUE, do.points = FALSE, col.01line = NULL,
#      axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 1080), ylim = c(0, 1),
#      main = '', sub = '(b)', xlab = 'Viewed Video Age (months)', ylab = 'CDF',
#      lwd = 2, col = 'blue')
# axis(side = 1, at = seq(0, 1080, 180), labels = seq(0, 1080, 180)/30, las = 1, tck = 1, lty = 2, col = 'grey')
# axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
# box()
#
#
#
# dev.off()
#
#
workpath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/characterization/'
uploading_dur = read.table(paste(workpath, 'uploading/video property/dur', sep = ''))$V1
playback_dur = read.table(paste(workpath, 'playback/video property/dur', sep = ''))$V1
uploading_dur = read.table(paste(workpath, 'uploading/video property/dur', sep = ''))$V1
uploading_cat = read.table(paste(workpath, 'uploading/video property/dur', sep = ''))$V2
playback_dur = read.table(paste(workpath, 'playback/video property/dur', sep = ''))$V1
playback_cat = read.table(paste(workpath, 'playback/video property/dur', sep = ''))$V2
playback_cat
levels(playback_cat)
idx = which(uploading_cat == '生活')
summary(uploading_cat[idx])
summary(uploading_dur[idx])
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '生活')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '教育')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '音乐')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '游戏')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '亲子')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '电视剧')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '资讯')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '体育')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '创意视频')
summary(uploading_dur[idx], digits = 10)
idx = which(uploading_cat == '自拍')
summary(uploading_dur[idx], digits = 10)
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '生活')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '教育')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '音乐')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '游戏')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '亲子')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '电视剧')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '资讯')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '体育')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '创意视频')
summary(uploading_dur[idx] / 60, digits = 10)
idx = which(uploading_cat == '自拍')
summary(uploading_dur[idx] / 60, digits = 10)
levels(playback_cat)
idx = which(playback_cat == '电视剧')
summary(playback_cat[idx] / 60, digits = 10)
idx = which(playback_cat == '电视剧')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '动漫')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '电影')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '生活')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '娱乐')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '综艺')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '音乐')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '自拍')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '教育')
summary(playback_dur[idx] / 60, digits = 10)
idx = which(playback_cat == '搞笑')
summary(playback_dur[idx] / 60, digits = 10)
workpath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/characterization/'
uploading_dur = read.table(paste(workpath, 'uploading/video property/dur', sep = ''))$V1
playback_dur = read.table(paste(workpath, 'playback/video property/dur', sep = ''))$V1
pdf(paste(workpath, "plot/video property/dur.pdf", sep = ''),
width = 5, height = 4)
cdf_uploading_dur = ecdf(uploading_dur)
cdf_playback_dur = ecdf(playback_dur)
#d,l,u,r
par(mar=c(5, 4, 1, 2))
plot(cdf_uploading_dur, verticals = TRUE, do.points = FALSE, col.01line = NULL,
axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 3600), ylim = c(0, 1),
main = '', sub = '', xlab = 'Video Duration (minutes)', ylab = 'CDF',
lwd = 2, col = 'blue')
lines(cdf_playback_dur, verticals = TRUE, do.points = FALSE, col.01line = NULL, lwd = 2, col = 'red')
axis(side = 1, at = seq(0, 3600, 600), labels = seq(0, 3600, 600) / 60, las = 1, tck = 1, lty = 2, col = 'grey')
axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
legend("bottomright",
lwd = c(2, 2), col = c('blue', 'red'),
legend = c('Uploaded Videos', 'Viewed Videos'), bg = "white", cex = 0.8)
box()
dev.off()
workpath = '/Users/ouyangshuxin/Documents/Youku_Watching_Uploading/characterization/'
uploading_dur = read.table(paste(workpath, 'uploading/video property/dur', sep = ''))$V1
playback_dur = read.table(paste(workpath, 'playback/video property/dur', sep = ''))$V1
cdf_uploading_dur = ecdf(uploading_dur)
cdf_playback_dur = ecdf(playback_dur)
#d,l,u,r
par(mar=c(5, 4, 1, 2))
plot(cdf_uploading_dur, verticals = TRUE, do.points = FALSE, col.01line = NULL,
axes = FALSE, xaxs="i",yaxs="i", xlim = c(0, 3600), ylim = c(0, 1),
main = '', sub = '', xlab = 'Video Duration (minutes)', ylab = 'CDF',
lwd = 2, col = 'blue')
lines(cdf_playback_dur, verticals = TRUE, do.points = FALSE, col.01line = NULL, lwd = 2, col = 'red')
axis(side = 1, at = seq(0, 3600, 600), labels = seq(0, 3600, 600) / 60, las = 1, tck = 1, lty = 2, col = 'grey')
axis(side = 2, at = seq(0, 1, 0.1), labels = seq(0, 1, 0.1), las = 1, tck = 1, lty = 2, col = 'grey')
legend("bottomright",
lwd = c(2, 2), col = c('blue', 'red'),
legend = c('Uploaded Videos', 'Viewed Videos'), bg = "white", cex = 0.8)
box()
cdf_uploading_dur(10)
cdf_uploading_dur(10*60)
cdf_uploading_dur(30*60)
cdf_playback_dur(10*60)
cdf_playback_dur(30*60)
cdf_playback_dur(41*60)
cdf_playback_dur(42*60)
cdf_playback_dur(43*60)
cdf_playback_dur(44*60)
cdf_playback_dur(45*60)
cdf_playback_dur(46*60)
cdf_playback_dur(47*60)
cdf_playback_dur(48*60)
cdf_playback_dur(49*60)
0.8298558 - 0.6864
cdf_playback_dur(48*60) - cdf_playback_dur(42*60)
